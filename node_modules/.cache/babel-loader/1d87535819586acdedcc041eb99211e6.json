{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./estilos/App.css\";\nimport \"./estilos/AppResponsive.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport ResultadoPaises from \"./componentes/resultadoPaises\";\n\nconst App = () => {\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\"\n  });\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n    cantidadCard: 10\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(graphqlQuery().filtrarPorNombre);\n\n  const cambiarOrden = e => {\n    setEstadoBotones({ ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array === null || array === void 0 ? void 0 : array.filter(str => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n\n  const ordenarPaisesPor = dataApollo => {\n    var _dataApollo$countries;\n\n    let nombre1 = null;\n    let nombre2 = null;\n    return dataApollo === null || dataApollo === void 0 ? void 0 : (_dataApollo$countries = dataApollo.countries) === null || _dataApollo$countries === void 0 ? void 0 : _dataApollo$countries.sort((a, b) => {\n      var _a$languages$, _b$languages$;\n\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          nombre1 = a.continent.name.toLowerCase();\n          nombre2 = b.continent.name.toLowerCase();\n          break;\n\n        case 1:\n          nombre1 = (_a$languages$ = a.languages[0]) === null || _a$languages$ === void 0 ? void 0 : _a$languages$.name.toLowerCase();\n          nombre2 = (_b$languages$ = b.languages[0]) === null || _b$languages$ === void 0 ? void 0 : _b$languages$.name.toLowerCase();\n          break;\n\n        default:\n          break;\n      }\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  let configurarArrayDatos = listaPaises => filtrarLista(ordenarPaisesPor(listaPaises), estadoInput.buscar);\n  /*   const ResultadoBusqueda = () => {\n      if (loading) return <p className=\"parratoCargando\">Loading ...</p>;\n      if (error) return <p className=\"parratoError\">error</p>;\n  \n      if (data) {\n        return configurarArrayDatos(data)\n          ?.slice(\n            estadoBotones.EstadoPagina * 10,\n            estadoBotones.EstadoPagina * 10 + 10\n          )\n          .map((listaBusqueda, index) => (\n            <article key={index}>\n              <div className=\"divContenedorDatosArticuloTitulo \">\n                <h1>Pais {listaBusqueda.emoji}</h1>\n                <h2>{listaBusqueda.name}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo \">\n                <h2>Capital:</h2>\n                <h2>{listaBusqueda.capital}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo \">\n                <h2>lenguas:</h2>\n                <h2>{listaBusqueda.languages[0]?.name}</h2>\n              </div>\n  \n              <div className=\"divContenedorDatosArticulo \">\n                <h2>Continente:</h2>\n                <h2>{listaBusqueda.continent.name}</h2>\n              </div>\n            </article>\n          ));\n      } else {\n        return <div>no data</div>;\n      }\n    }; */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorApp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \" Paises\")), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorBuscar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    spellCheck: false,\n    value: estadoInput.buscar,\n    onChange: e => {\n      setEstadoInput({\n        buscar: e.currentTarget.value\n      });\n      setEstadoBotones({ ...estadoBotones,\n        EstadoPagina: 0\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorOrdenarPor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Ordenar por\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 0 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Continente\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Continente\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 1 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Lenguaje\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Lenguaje\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorArticulos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResultadoPaises, {\n    query: [loading, error, data],\n    estadoPagina: estadoBotones.EstadoPagina,\n    datos: configurarArrayDatos(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorPaginacion \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paginacion, {\n    query: [loading, error],\n    hookEstadoPagina: estadoBotones,\n    hookSetEstadoPagina: setEstadoBotones,\n    datos: configurarArrayDatos(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/App.js"],"names":["React","useState","useQuery","graphqlQuery","Paginacion","ResultadoPaises","App","estadoInput","setEstadoInput","buscar","estadoBotones","setEstadoBotones","SeleccionOrden","EstadoPagina","cantidadCard","loading","error","data","filtrarPorNombre","cambiarOrden","e","currentTarget","name","filtrarLista","array","input","filter","str","toLowerCase","indexOf","ordenarPaisesPor","dataApollo","nombre1","nombre2","countries","sort","a","b","continent","languages","configurarArrayDatos","listaPaises","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./estilos/App.css\";\nimport \"./estilos/AppResponsive.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport ResultadoPaises from \"./componentes/resultadoPaises\";\n\nconst App = () => {\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\",\n  });\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n    cantidadCard: 10,\n  });\n  const { loading, error, data } = useQuery(graphqlQuery().filtrarPorNombre);\n\n  const cambiarOrden = (e) => {\n    setEstadoBotones({\n      ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1,\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array?.filter((str) => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n  const ordenarPaisesPor = (dataApollo) => {\n    let nombre1 = null;\n    let nombre2 = null;\n    return dataApollo?.countries?.sort((a, b) => {\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          nombre1 = a.continent.name.toLowerCase();\n          nombre2 = b.continent.name.toLowerCase();\n          break;\n        case 1:\n          nombre1 = a.languages[0]?.name.toLowerCase();\n          nombre2 = b.languages[0]?.name.toLowerCase();\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n  let configurarArrayDatos = (listaPaises) =>\n    filtrarLista(ordenarPaisesPor(listaPaises), estadoInput.buscar);\n\n\n/*   const ResultadoBusqueda = () => {\n    if (loading) return <p className=\"parratoCargando\">Loading ...</p>;\n    if (error) return <p className=\"parratoError\">error</p>;\n\n    if (data) {\n      return configurarArrayDatos(data)\n        ?.slice(\n          estadoBotones.EstadoPagina * 10,\n          estadoBotones.EstadoPagina * 10 + 10\n        )\n        .map((listaBusqueda, index) => (\n          <article key={index}>\n            <div className=\"divContenedorDatosArticuloTitulo \">\n              <h1>Pais {listaBusqueda.emoji}</h1>\n              <h2>{listaBusqueda.name}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo \">\n              <h2>Capital:</h2>\n              <h2>{listaBusqueda.capital}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo \">\n              <h2>lenguas:</h2>\n              <h2>{listaBusqueda.languages[0]?.name}</h2>\n            </div>\n\n            <div className=\"divContenedorDatosArticulo \">\n              <h2>Continente:</h2>\n              <h2>{listaBusqueda.continent.name}</h2>\n            </div>\n          </article>\n        ));\n    } else {\n      return <div>no data</div>;\n    }\n  }; */\n\n  return (\n    <div className=\"divContenedorApp\">\n      <header>\n        <h1> Paises</h1>\n      </header>\n      <main>\n        <div className=\"divContenedorBuscar\">\n          <input\n            spellCheck={false}\n            value={estadoInput.buscar}\n            onChange={(e) => {\n              setEstadoInput({ buscar: e.currentTarget.value });\n              setEstadoBotones({ ...estadoBotones, EstadoPagina: 0 });\n            }}\n          />\n\n          <div className=\"divContenedorOrdenarPor\">\n            <h3>Ordenar por</h3>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 0\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Continente\"\n              onClick={cambiarOrden}\n            >\n              Continente\n            </button>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 1\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Lenguaje\"\n              onClick={cambiarOrden}\n            >\n              Lenguaje\n            </button>\n          </div>\n        </div>\n        <div className=\"divContenedorArticulos\">\n          <ResultadoPaises \n          query={[loading, error, data]}\n          estadoPagina={estadoBotones.EstadoPagina}\n          datos={configurarArrayDatos(data)}\n          />\n        </div>\n        <div className=\"divContenedorPaginacion \">\n          <Paginacion\n            query={[loading, error]}\n            hookEstadoPagina={estadoBotones}\n            hookSetEstadoPagina={setEstadoBotones}\n            datos={configurarArrayDatos(data)}\n          />\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}