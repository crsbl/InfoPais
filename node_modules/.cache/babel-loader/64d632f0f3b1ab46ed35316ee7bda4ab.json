{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n    cantidadPaginas: 10\n  });\n  let totalPaginas = 0;\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\"\n  });\n  const [estadoDataInfo, setEstadoDataInfo] = useState(true);\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(graphqlQuery().filtrarPorNombre);\n  const [getResult, {\n    loading: loadingLazy,\n    error: errorLazy,\n    data: dataLazy\n  }] = useLazyQuery(graphqlQuery().filtrarPorNombre);\n\n  const cambiarOrden = e => {\n    getResult();\n    setEstadoBotones({ ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array === null || array === void 0 ? void 0 : array.filter(str => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n\n  const OrdenarPaisesPor = dataApollo => {\n    var _dataApollo$countries;\n\n    let nombre1 = null;\n    let nombre2 = null;\n    return dataApollo === null || dataApollo === void 0 ? void 0 : (_dataApollo$countries = dataApollo.countries) === null || _dataApollo$countries === void 0 ? void 0 : _dataApollo$countries.sort((a, b) => {\n      var _a$languages$, _b$languages$;\n\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          nombre1 = a.continent.name.toLowerCase();\n          nombre2 = b.continent.name.toLowerCase();\n          break;\n\n        case 1:\n          nombre1 = (_a$languages$ = a.languages[0]) === null || _a$languages$ === void 0 ? void 0 : _a$languages$.name.toLowerCase();\n          nombre2 = (_b$languages$ = b.languages[0]) === null || _b$languages$ === void 0 ? void 0 : _b$languages$.name.toLowerCase();\n          break;\n\n        default:\n          break;\n      }\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  let configurarArrayDatos = (dataArray, dataArrayLazy) => filtrarLista(OrdenarPaisesPor(estadoDataInfo ? dataArray : dataArrayLazy), estadoInput.buscar);\n\n  const ResultadoBusqueda = () => {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Loading ...\");\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, \"error\");\n    /*    setlist(data);  */\n\n    /*    if (estadoDataInfo ? data : dataLazy){\n    console.log('dentro', lis);\n     return lis?.map((listaBusqueda, index)=>( <article className=\"flexBox RowWarp\" key={index}>\n    <h1>Pais</h1>\n    <div className=\"divContenedorDatosArticulo flexBoxRow\">\n      <h2>Nombre:</h2>\n      <h2>{listaBusqueda.name}</h2>\n    </div>\n    <div className=\"divContenedorDatosArticulo flexBoxRow\">\n      <h2>Capital:</h2>\n      <h2>{listaBusqueda.capital}</h2>\n    </div>\n    <div className=\"divContenedorDatosArticulo flexBoxRow\">\n      <h2>lenguas:</h2>\n      <h2>{listaBusqueda.languages[0]?.name}</h2>\n    </div>\n    \n    <div className=\"divContenedorDatosArticulo flexBoxRow\">\n      <h2>Continente:</h2>\n      <h2>{listaBusqueda.continent.name}</h2>\n    </div>\n    </article>));\n        }  */\n\n    if (estadoDataInfo ? data : dataLazy) {\n      var _data$countries, _dataLazy$countries, _configurarArrayDatos;\n\n      totalPaginas = estadoDataInfo ? data === null || data === void 0 ? void 0 : (_data$countries = data.countries) === null || _data$countries === void 0 ? void 0 : _data$countries.length : dataLazy === null || dataLazy === void 0 ? void 0 : (_dataLazy$countries = dataLazy.countries) === null || _dataLazy$countries === void 0 ? void 0 : _dataLazy$countries.length;\n      return (_configurarArrayDatos = configurarArrayDatos(data, dataLazy)) === null || _configurarArrayDatos === void 0 ? void 0 : _configurarArrayDatos.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + estadoBotones.cantidadPaginas).map((listaBusqueda, index) => {\n        var _listaBusqueda$langua;\n\n        return /*#__PURE__*/React.createElement(\"article\", {\n          className: \"flexBox RowWarp\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 131\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }\n        }, \"Pais\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divContenedorDatosArticulo flexBoxRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }\n        }, \"Nombre:\"), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }\n        }, listaBusqueda.name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divContenedorDatosArticulo flexBoxRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }\n        }, \"Capital:\"), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }\n        }, listaBusqueda.capital)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divContenedorDatosArticulo flexBoxRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }\n        }, \"lenguas:\"), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }\n        }, (_listaBusqueda$langua = listaBusqueda.languages[0]) === null || _listaBusqueda$langua === void 0 ? void 0 : _listaBusqueda$langua.name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divContenedorDatosArticulo flexBoxRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }\n        }, \"Continente:\"), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }\n        }, listaBusqueda.continent.name)));\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, \"no data\");\n    }\n    /*    if (estadoDataInfo ? data : dataLazy) {\n         let operacionesBuscar = filtrarLista(\n           OrdenarPaisesPor(estadoDataInfo ? data : dataLazy),\n           estadoInput.buscar\n         )\n           ?.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10)\n           .map((asd, index) => {\n             return (\n               <article className=\"flexBox RowWarp\" key={index}>\n                 <h1>Pais</h1>\n                 <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                   <h2>Nombre:</h2>\n                   <h2>{asd.name}</h2>\n                 </div>\n                 <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                   <h2>Capital:</h2>\n                   <h2>{asd.capital}</h2>\n                 </div>\n                 <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                   <h2>lenguas:</h2>\n                   <h2>{asd.languages[0]?.name}</h2>\n                 </div>\n                  <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                   <h2>Continente:</h2>\n                   <h2>{asd.continent.name}</h2>\n                 </div>\n               </article>\n             );\n           });\n          return operacionesBuscar;\n       } else {\n         return <div>no data</div>;\n       } */\n\n  };\n\n  useEffect(() => {}, [estadoInput]);\n  useEffect(() => {\n    setEstadoDataInfo(false);\n    cantidadPaginas = console.log(estadoDataInfo);\n  }, [estadoInput]);\n  useEffect(() => {\n    setEstadoDataInfo(true);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorApp flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \" Paises\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorBuscar flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    spellCheck: false,\n    value: estadoInput.buscar,\n    onChange: e => {\n      setEstadoInput({\n        buscar: e.currentTarget.value\n      });\n      getResult();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorOrdenarPor flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"Ordenar por\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 0 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Continente\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"Continente\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 1 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Lenguaje\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Lenguaje\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorArticulos flexBoxRowWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResultadoBusqueda, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorPaginacion flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paginacion, {\n    hookEstadoPagina: estadoBotones,\n    hookSetEstadoPagina: setEstadoBotones,\n    hookListaPaises: configurarArrayDatos,\n    datos: [data, dataLazy],\n    cantidadPaginas: cantidadPaginas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/App.js"],"names":["React","useEffect","useState","useQuery","graphqlQuery","Paginacion","useLazyQuery","App","estadoBotones","setEstadoBotones","SeleccionOrden","EstadoPagina","cantidadPaginas","totalPaginas","estadoInput","setEstadoInput","buscar","estadoDataInfo","setEstadoDataInfo","loading","error","data","refetch","filtrarPorNombre","getResult","loadingLazy","errorLazy","dataLazy","cambiarOrden","e","currentTarget","name","filtrarLista","array","input","filter","str","toLowerCase","indexOf","OrdenarPaisesPor","dataApollo","nombre1","nombre2","countries","sort","a","b","continent","languages","configurarArrayDatos","dataArray","dataArrayLazy","ResultadoBusqueda","length","slice","map","listaBusqueda","index","capital","console","log","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n    cantidadPaginas:10,\n  });\n\n  let totalPaginas=0;\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\",\n  });\n  const [estadoDataInfo, setEstadoDataInfo] = useState(true);\n\n  const { loading, error, data, refetch } = useQuery(\n    graphqlQuery().filtrarPorNombre\n  );\n  const [\n    getResult,\n    { loading: loadingLazy, error: errorLazy, data: dataLazy },\n  ] = useLazyQuery(graphqlQuery().filtrarPorNombre);\n\n  const cambiarOrden = (e) => {\n    getResult();\n    setEstadoBotones({\n      ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1,\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array?.filter((str) => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n  const OrdenarPaisesPor = (dataApollo) => {\n    let nombre1 = null;\n    let nombre2 = null;\n    return dataApollo?.countries?.sort((a, b) => {\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          nombre1 = a.continent.name.toLowerCase();\n          nombre2 = b.continent.name.toLowerCase();\n\n          break;\n\n        case 1:\n          nombre1 = a.languages[0]?.name.toLowerCase();\n          nombre2 = b.languages[0]?.name.toLowerCase();\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n\n  let configurarArrayDatos =(dataArray,dataArrayLazy)=>filtrarLista(\n    OrdenarPaisesPor(estadoDataInfo ? dataArray : dataArrayLazy),\n    estadoInput.buscar\n  );\n\n  const ResultadoBusqueda = () => {\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>error</p>;\n /*    setlist(data);  */\n/*    if (estadoDataInfo ? data : dataLazy){\nconsole.log('dentro', lis);\n return lis?.map((listaBusqueda, index)=>( <article className=\"flexBox RowWarp\" key={index}>\n<h1>Pais</h1>\n<div className=\"divContenedorDatosArticulo flexBoxRow\">\n  <h2>Nombre:</h2>\n  <h2>{listaBusqueda.name}</h2>\n</div>\n<div className=\"divContenedorDatosArticulo flexBoxRow\">\n  <h2>Capital:</h2>\n  <h2>{listaBusqueda.capital}</h2>\n</div>\n<div className=\"divContenedorDatosArticulo flexBoxRow\">\n  <h2>lenguas:</h2>\n  <h2>{listaBusqueda.languages[0]?.name}</h2>\n</div>\n\n<div className=\"divContenedorDatosArticulo flexBoxRow\">\n  <h2>Continente:</h2>\n  <h2>{listaBusqueda.continent.name}</h2>\n</div>\n</article>));\n    }  */\n\n    if(estadoDataInfo ? data : dataLazy){\n      totalPaginas = estadoDataInfo ? data?.countries?.length : dataLazy?.countries?.length;\n     return configurarArrayDatos(data, dataLazy)\n     ?.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + estadoBotones.cantidadPaginas).map((listaBusqueda, index)=>(<article className=\"flexBox RowWarp\" key={index}>\n      <h1>Pais</h1>\n      <div className=\"divContenedorDatosArticulo flexBoxRow\">\n        <h2>Nombre:</h2>\n        <h2>{listaBusqueda.name}</h2>\n      </div>\n      <div className=\"divContenedorDatosArticulo flexBoxRow\">\n        <h2>Capital:</h2>\n        <h2>{listaBusqueda.capital}</h2>\n      </div>\n      <div className=\"divContenedorDatosArticulo flexBoxRow\">\n        <h2>lenguas:</h2>\n        <h2>{listaBusqueda.languages[0]?.name}</h2>\n      </div>\n      \n      <div className=\"divContenedorDatosArticulo flexBoxRow\">\n        <h2>Continente:</h2>\n        <h2>{listaBusqueda.continent.name}</h2>\n      </div>\n      </article>))\n    }else{\n     \n      return<div>no data</div>\n    }\n\n\n /*    if (estadoDataInfo ? data : dataLazy) {\n      let operacionesBuscar = filtrarLista(\n        OrdenarPaisesPor(estadoDataInfo ? data : dataLazy),\n        estadoInput.buscar\n      )\n        ?.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10)\n        .map((asd, index) => {\n          return (\n            <article className=\"flexBox RowWarp\" key={index}>\n              <h1>Pais</h1>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Nombre:</h2>\n                <h2>{asd.name}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Capital:</h2>\n                <h2>{asd.capital}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>lenguas:</h2>\n                <h2>{asd.languages[0]?.name}</h2>\n              </div>\n\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Continente:</h2>\n                <h2>{asd.continent.name}</h2>\n              </div>\n            </article>\n          );\n        });\n\n      return operacionesBuscar;\n    } else {\n      return <div>no data</div>;\n    } */\n  };\n\n  useEffect(() => {}, [estadoInput]);\n\n  useEffect(( )=>{ setEstadoDataInfo(false)\n    cantidadPaginas= \n  console.log(estadoDataInfo)\n  },[estadoInput]);\n  useEffect(( )=>{ setEstadoDataInfo(true)},[]);\n  return (\n    <div className=\"divContenedorApp flexBoxColumn\">\n      <header>\n        <h1> Paises</h1>\n      </header>\n      <main className=\"flexBoxColumn\">\n        <div className=\"divContenedorBuscar flexBoxColumn\">\n          <input\n            spellCheck={false}\n            value={estadoInput.buscar}\n            onChange={(e) => {\n              setEstadoInput({ buscar: e.currentTarget.value });\n              getResult();\n\n            }}\n          />\n\n          <div className=\"divContenedorOrdenarPor flexBoxRow\">\n            <h3>Ordenar por</h3>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 0\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Continente\"\n              onClick={cambiarOrden}\n            >\n              Continente\n            </button>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 1\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Lenguaje\"\n              onClick={cambiarOrden}\n            >\n              Lenguaje\n            </button>\n          </div>\n        </div>\n        <div className=\"divContenedorArticulos flexBoxRowWrap\">\n          <ResultadoBusqueda />\n        </div>\n        <div className=\"divContenedorPaginacion flexBoxRow\">\n          <Paginacion\n            hookEstadoPagina={estadoBotones}\n            hookSetEstadoPagina={setEstadoBotones}\n            hookListaPaises={configurarArrayDatos}\n            datos={[data, dataLazy]}\n            cantidadPaginas={cantidadPaginas}\n          />\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}