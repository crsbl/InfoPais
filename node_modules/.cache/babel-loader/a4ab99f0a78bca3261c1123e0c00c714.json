{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n    cantidadPaginas: 10\n  });\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\"\n  });\n  const [listaPaises, setListaPaises] = useState(null);\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(graphqlQuery().filtrarPorNombre);\n  const [getResult, {\n    loading: loadingLazy,\n    error: errorLazy,\n    data: dataLazy\n  }] = useLazyQuery(graphqlQuery().filtrarPorNombre);\n\n  const cambiarOrden = e => {\n    getResult();\n    setEstadoBotones({ ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array === null || array === void 0 ? void 0 : array.filter(str => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n\n  const OrdenarPaisesPor = dataApollo => {\n    let nombre1 = null;\n    let nombre2 = null;\n    return dataApollo === null || dataApollo === void 0 ? void 0 : dataApollo.countries.sort((a, b) => {\n      var _a$languages$, _b$languages$;\n\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          nombre1 = a.continent.name.toLowerCase();\n          nombre2 = b.continent.name.toLowerCase();\n          break;\n\n        case 1:\n          nombre1 = (_a$languages$ = a.languages[0]) === null || _a$languages$ === void 0 ? void 0 : _a$languages$.name.toLowerCase();\n          nombre2 = (_b$languages$ = b.languages[0]) === null || _b$languages$ === void 0 ? void 0 : _b$languages$.name.toLowerCase();\n          break;\n\n        default:\n          break;\n      }\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  let configurarArrayDatos = listaPaises => filtrarLista(OrdenarPaisesPor(listaPaises), estadoInput.buscar);\n\n  const ResultadoBusqueda = () => {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Loading ...\");\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }\n    }, \"error\");\n    setListaPaises(data);\n\n    if (listaPaises) {\n      var _configurarArrayDatos;\n\n      return (_configurarArrayDatos = configurarArrayDatos(listaPaises)) === null || _configurarArrayDatos === void 0 ? void 0 : _configurarArrayDatos.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + estadoBotones.cantidadPaginas).map((listaBusqueda, index) => {\n        var _listaBusqueda$langua;\n\n        return /*#__PURE__*/React.createElement(\"article\", {\n          className: \"flexBox RowWarp\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, \"Pais\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divContenedorDatosArticulo flexBoxRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        }, \"Nombre:\"), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }\n        }, listaBusqueda.name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divContenedorDatosArticulo flexBoxRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }\n        }, \"Capital:\"), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }\n        }, listaBusqueda.capital)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divContenedorDatosArticulo flexBoxRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }\n        }, \"lenguas:\"), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        }, (_listaBusqueda$langua = listaBusqueda.languages[0]) === null || _listaBusqueda$langua === void 0 ? void 0 : _listaBusqueda$langua.name)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divContenedorDatosArticulo flexBoxRow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }\n        }, \"Continente:\"), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }\n        }, listaBusqueda.continent.name)));\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 14\n        }\n      }, \"no data\");\n    }\n    /*    if (estadoDataInfo ? data : dataLazy) {\n      let operacionesBuscar = filtrarLista(\n        OrdenarPaisesPor(estadoDataInfo ? data : dataLazy),\n        estadoInput.buscar\n      )\n        ?.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10)\n        .map((asd, index) => {\n          return (\n            <article className=\"flexBox RowWarp\" key={index}>\n              <h1>Pais</h1>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Nombre:</h2>\n                <h2>{asd.name}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Capital:</h2>\n                <h2>{asd.capital}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>lenguas:</h2>\n                <h2>{asd.languages[0]?.name}</h2>\n              </div>\n               <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Continente:</h2>\n                <h2>{asd.continent.name}</h2>\n              </div>\n            </article>\n          );\n        });\n       return operacionesBuscar;\n    } else {\n      return <div>no data</div>;\n    } */\n\n  };\n  /* \n  useEffect(() => {}, [estadoInput]);\n   useEffect(( )=>{ setEstadoDataInfo(false)\n   console.log(estadoDataInfo)\n  },[estadoInput]);\n  useEffect(( )=>{ setEstadoDataInfo(true)},[]); */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorApp flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \" Paises\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorBuscar flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    spellCheck: false,\n    value: estadoInput.buscar,\n    onChange: e => {\n      setEstadoInput({\n        buscar: e.currentTarget.value\n      });\n      getResult();\n      setListaPaises(dataLazy);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorOrdenarPor flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Ordenar por\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 0 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Continente\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Continente\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 1 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Lenguaje\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Lenguaje\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorArticulos flexBoxRowWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResultadoBusqueda, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorPaginacion flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paginacion, {\n    hookEstadoPagina: estadoBotones,\n    hookSetEstadoPagina: setEstadoBotones,\n    hookconfigurarArrayDatos: configurarArrayDatos,\n    listaPaises: listaPaises,\n    query: [loading, error, data],\n    queryLazy: [loadingLazy, errorLazy, dataLazy],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/App.js"],"names":["React","useEffect","useState","useQuery","graphqlQuery","Paginacion","useLazyQuery","App","estadoBotones","setEstadoBotones","SeleccionOrden","EstadoPagina","cantidadPaginas","estadoInput","setEstadoInput","buscar","listaPaises","setListaPaises","loading","error","data","refetch","filtrarPorNombre","getResult","loadingLazy","errorLazy","dataLazy","cambiarOrden","e","currentTarget","name","filtrarLista","array","input","filter","str","toLowerCase","indexOf","OrdenarPaisesPor","dataApollo","nombre1","nombre2","countries","sort","a","b","continent","languages","configurarArrayDatos","ResultadoBusqueda","slice","map","listaBusqueda","index","capital","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n    cantidadPaginas: 10,\n  });\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\",\n  });\n\n  const [listaPaises, setListaPaises] = useState(null);\n\n  const { loading, error, data, refetch } = useQuery(\n    graphqlQuery().filtrarPorNombre\n  );\n  const [\n    getResult,\n    { loading: loadingLazy, error: errorLazy, data: dataLazy },\n  ] = useLazyQuery(graphqlQuery().filtrarPorNombre);\n\n  const cambiarOrden = (e) => {\n    getResult();\n    setEstadoBotones({\n      ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1,\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array?.filter((str) => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n  const OrdenarPaisesPor = (dataApollo) => {\n    let nombre1 = null;\n    let nombre2 = null;\n    return dataApollo?.countries.sort((a, b) => {\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          nombre1 = a.continent.name.toLowerCase();\n          nombre2 = b.continent.name.toLowerCase();\n          break;\n        case 1:\n          nombre1 = a.languages[0]?.name.toLowerCase();\n          nombre2 = b.languages[0]?.name.toLowerCase();\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n\n  let configurarArrayDatos = (listaPaises) =>\n    filtrarLista(OrdenarPaisesPor(listaPaises), estadoInput.buscar);\n\n  const ResultadoBusqueda = () => {\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>error</p>;\n    setListaPaises(data);\n    if (listaPaises) {\n      return configurarArrayDatos(listaPaises)\n        ?.slice(\n          estadoBotones.EstadoPagina,\n          estadoBotones.EstadoPagina + estadoBotones.cantidadPaginas\n        )\n        .map((listaBusqueda, index) => (\n          <article className=\"flexBox RowWarp\" key={index}>\n            <h1>Pais</h1>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Nombre:</h2>\n              <h2>{listaBusqueda.name}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Capital:</h2>\n              <h2>{listaBusqueda.capital}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>lenguas:</h2>\n              <h2>{listaBusqueda.languages[0]?.name}</h2>\n            </div>\n\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Continente:</h2>\n              <h2>{listaBusqueda.continent.name}</h2>\n            </div>\n          </article>\n        ));\n    } else {\n      return <div>no data</div>;\n    }\n\n    /*    if (estadoDataInfo ? data : dataLazy) {\n      let operacionesBuscar = filtrarLista(\n        OrdenarPaisesPor(estadoDataInfo ? data : dataLazy),\n        estadoInput.buscar\n      )\n        ?.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10)\n        .map((asd, index) => {\n          return (\n            <article className=\"flexBox RowWarp\" key={index}>\n              <h1>Pais</h1>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Nombre:</h2>\n                <h2>{asd.name}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Capital:</h2>\n                <h2>{asd.capital}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>lenguas:</h2>\n                <h2>{asd.languages[0]?.name}</h2>\n              </div>\n\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Continente:</h2>\n                <h2>{asd.continent.name}</h2>\n              </div>\n            </article>\n          );\n        });\n\n      return operacionesBuscar;\n    } else {\n      return <div>no data</div>;\n    } */\n  };\n  /* \n  useEffect(() => {}, [estadoInput]);\n\n  useEffect(( )=>{ setEstadoDataInfo(false)\n\n  console.log(estadoDataInfo)\n  },[estadoInput]);\n  useEffect(( )=>{ setEstadoDataInfo(true)},[]); */\n  return (\n    <div className=\"divContenedorApp flexBoxColumn\">\n      <header>\n        <h1> Paises</h1>\n      </header>\n      <main className=\"flexBoxColumn\">\n        <div className=\"divContenedorBuscar flexBoxColumn\">\n          <input\n            spellCheck={false}\n            value={estadoInput.buscar}\n            onChange={(e) => {\n              setEstadoInput({ buscar: e.currentTarget.value });\n              getResult();\n              setListaPaises(dataLazy);\n            }}\n          />\n\n          <div className=\"divContenedorOrdenarPor flexBoxRow\">\n            <h3>Ordenar por</h3>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 0\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Continente\"\n              onClick={cambiarOrden}\n            >\n              Continente\n            </button>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 1\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Lenguaje\"\n              onClick={cambiarOrden}\n            >\n              Lenguaje\n            </button>\n          </div>\n        </div>\n        <div className=\"divContenedorArticulos flexBoxRowWrap\">\n          <ResultadoBusqueda />\n        </div>\n        <div className=\"divContenedorPaginacion flexBoxRow\">\n          <Paginacion\n            hookEstadoPagina={estadoBotones}\n            hookSetEstadoPagina={setEstadoBotones}\n            hookconfigurarArrayDatos={configurarArrayDatos}\n            listaPaises={listaPaises}\n            query={[loading, error, data]}\n            queryLazy={[loadingLazy, errorLazy, dataLazy]}\n          />\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}