{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\n\nconst App = () => {\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\"\n  });\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0\n  });\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(graphqlQuery().filtrarPorNombre);\n\n  const cambiarOrden = e => {\n    setEstadoBotones({\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1\n    });\n  };\n\n  let listaPaisesOrdenar = data.countries.sort((a, b) => {\n    var _a$languages$, _b$languages$;\n\n    let nombre1 = null;\n    let nombre2 = null;\n\n    switch (estadoBotones.SeleccionOrden) {\n      case 0:\n        nombre1 = a.continent.name.toLowerCase();\n        nombre2 = b.continent.name.toLowerCase();\n        break;\n\n      case 1:\n        nombre1 = (_a$languages$ = a.languages[0]) === null || _a$languages$ === void 0 ? void 0 : _a$languages$.name.toLowerCase();\n        nombre2 = (_b$languages$ = b.languages[0]) === null || _b$languages$ === void 0 ? void 0 : _b$languages$.name.toLowerCase();\n        break;\n\n      default:\n        break;\n    }\n\n    if (nombre1 < nombre2) {\n      return -1;\n    }\n\n    if (nombre1 > nombre2) {\n      return 1;\n    }\n\n    return 0;\n  });\n  let filtrarBusqueda = listaPaisesOrdenar.filter(function (str) {\n    return str.name.toLowerCase().indexOf(estadoInput.buscar) !== -1;\n  });\n\n  const ResultadoBusqueda = () => {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"Loading ...\");\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }\n    }, \"error\");\n    console.log(filtrarBusqueda);\n    return filtrarBusqueda.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10).map((asd, index) => {\n      var _asd$languages$;\n\n      return /*#__PURE__*/React.createElement(\"article\", {\n        className: \"flexBox RowWarp\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, \"Pais\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divContenedorDatosArticulo flexBoxRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, \"Nombre:\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, asd.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divContenedorDatosArticulo flexBoxRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, \"Capital:\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, asd.capital)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divContenedorDatosArticulo flexBoxRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, \"lenguas:\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, (_asd$languages$ = asd.languages[0]) === null || _asd$languages$ === void 0 ? void 0 : _asd$languages$.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divContenedorDatosArticulo flexBoxRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, \"Continente:\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, asd.continent.name)));\n    });\n    /*  listaPaises.slice(0, 10).map((asd, index) => {\n      if (\n        asd.name.toLowerCase().indexOf(estadoInput.buscar.toLowerCase()) !== -1\n      ) {\n        return (\n          <article className=\"flexBox RowWarp\" key={index}>\n            <h1>Pais</h1>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Nombre:</h2>\n              <h2>{asd.name}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Capital:</h2>\n              <h2>{asd.capital}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>lenguas:</h2>\n              <h2>{asd.languages[0]?.name}</h2>\n            </div>\n             <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Continente:</h2>\n              <h2>{asd.continent.name}</h2>\n            </div>\n          </article>\n        );\n      }\n    }); */\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorApp flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \" Paises\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorBuscar flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    spellCheck: false,\n    value: estadoInput.buscar,\n    onChange: e => {\n      setEstadoInput({\n        buscar: e.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorOrdenarPor flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Ordenar por\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 0 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Continente\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Continente\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 1 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Lenguaje\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Lenguaje\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorArticulos flexBoxRowWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResultadoBusqueda, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorPaginacion flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paginacion, {\n    hookEstadoPagina: estadoBotones,\n    hookSetEstadoPagina: setEstadoBotones,\n    listaPaises: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/App.js"],"names":["React","useEffect","useState","ApolloClient","ApolloProvider","useQuery","graphqlQuery","Paginacion","App","estadoInput","setEstadoInput","buscar","estadoBotones","setEstadoBotones","SeleccionOrden","EstadoPagina","loading","error","data","refetch","filtrarPorNombre","cambiarOrden","e","currentTarget","name","listaPaisesOrdenar","countries","sort","a","b","nombre1","nombre2","continent","toLowerCase","languages","filtrarBusqueda","filter","str","indexOf","ResultadoBusqueda","console","log","slice","map","asd","index","capital","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\n\nconst App = () => {\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\",\n  });\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n  });\n  const { loading, error, data, refetch } = useQuery(\n    graphqlQuery().filtrarPorNombre\n  );\n  const cambiarOrden = (e) => {\n    setEstadoBotones({\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1,\n    });\n  };\n  let listaPaisesOrdenar = data.countries.sort((a, b) => {\n    let nombre1 = null;\n    let nombre2 = null;\n    switch (estadoBotones.SeleccionOrden) {\n     \n      case 0:\n        nombre1 = a.continent.name.toLowerCase();\n        nombre2 = b.continent.name.toLowerCase();\n\n        break;\n\n      case 1:\n        nombre1 = a.languages[0]?.name.toLowerCase();\n        nombre2 = b.languages[0]?.name.toLowerCase();\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (nombre1 < nombre2) {\n      return -1;\n    }\n    if (nombre1 > nombre2) {\n      return 1;\n    }\n    return 0;\n  });\n\n  let filtrarBusqueda = listaPaisesOrdenar.filter(function (str) {\n    return str.name.toLowerCase().indexOf(estadoInput.buscar) !== -1;\n  });\n\n  const ResultadoBusqueda = () => {\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>error</p>;\n\n\n \n\n    console.log(filtrarBusqueda);\n\n    return filtrarBusqueda\n      .slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10)\n      .map((asd, index) => {\n        return (\n          <article className=\"flexBox RowWarp\" key={index}>\n            <h1>Pais</h1>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Nombre:</h2>\n              <h2>{asd.name}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Capital:</h2>\n              <h2>{asd.capital}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>lenguas:</h2>\n              <h2>{asd.languages[0]?.name}</h2>\n            </div>\n\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Continente:</h2>\n              <h2>{asd.continent.name}</h2>\n            </div>\n          </article>\n        );\n      });\n\n    /*  listaPaises.slice(0, 10).map((asd, index) => {\n      if (\n        asd.name.toLowerCase().indexOf(estadoInput.buscar.toLowerCase()) !== -1\n      ) {\n        return (\n          <article className=\"flexBox RowWarp\" key={index}>\n            <h1>Pais</h1>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Nombre:</h2>\n              <h2>{asd.name}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Capital:</h2>\n              <h2>{asd.capital}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>lenguas:</h2>\n              <h2>{asd.languages[0]?.name}</h2>\n            </div>\n\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Continente:</h2>\n              <h2>{asd.continent.name}</h2>\n            </div>\n          </article>\n        );\n      }\n    }); */\n  };\n\n  return (\n    <div className=\"divContenedorApp flexBoxColumn\">\n      <header>\n        <h1> Paises</h1>\n      </header>\n      <main className=\"flexBoxColumn\">\n        <div className=\"divContenedorBuscar flexBoxColumn\">\n          <input\n            spellCheck={false}\n            value={estadoInput.buscar}\n            onChange={(e) => {\n              setEstadoInput({ buscar: e.currentTarget.value });\n            }}\n          />\n\n          <div className=\"divContenedorOrdenarPor flexBoxRow\">\n            <h3>Ordenar por</h3>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 0\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Continente\"\n              onClick={cambiarOrden}\n            >\n              Continente\n            </button>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 1\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Lenguaje\"\n              onClick={cambiarOrden}\n            >\n              Lenguaje\n            </button>\n          </div>\n        </div>\n        <div className=\"divContenedorArticulos flexBoxRowWrap\">\n          <ResultadoBusqueda />\n        </div>\n        <div className=\"divContenedorPaginacion flexBoxRow\">\n          <Paginacion\n            hookEstadoPagina={estadoBotones}\n            hookSetEstadoPagina={setEstadoBotones}\n            listaPaises={data}\n          />\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}