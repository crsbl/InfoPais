{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\componentes\\\\paginacion\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Paginacion = ({\n  query,\n  hookSetEstadoPagina,\n  hookEstadoPagina,\n  datos\n}) => {\n  const [estadoCantidad, setEstadoCantidad] = useState(0);\n  if (query[0]) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 24\n    }\n  }, \"Loading ...\");\n  if (query[1]) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 24\n    }\n  }, \"error\");\n\n  const configurarCantidadArray = datos => {\n    return Array.from({\n      length: datos.length / 10\n    });\n  };\n\n  console.log(configurarCantidadArray(datos));\n  console.log(\"asd\", estadoCantidad);\n  let cantidadPaginas = null;\n  /*   let arrayPaginacion = []; */\n\n  if (datos.length % 10 == 0) {\n    cantidadPaginas = datos.length / 10;\n  } else {\n    cantidadPaginas = datos.length / 10 + 1;\n  }\n  /* \r\n    for (let i = 0; i < cantidadPaginas; i++) {\r\n      arrayPaginacion.push([i]);\r\n    } */\n\n\n  return [1].map(paginas => /*#__PURE__*/React.createElement(\"button\", {\n    name: [paginas[0]],\n    style: hookEstadoPagina.EstadoPagina == paginas[0] ? {\n      border: \"solid .1rem red\"\n    } : {\n      border: \"\"\n    },\n    onClick: () => {\n      hookSetEstadoPagina({ ...hookEstadoPagina,\n        EstadoPagina: paginas[0]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, paginas[0] + 1));\n};\n\nexport default Paginacion;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/componentes/paginacion/index.js"],"names":["React","useEffect","useState","Paginacion","query","hookSetEstadoPagina","hookEstadoPagina","datos","estadoCantidad","setEstadoCantidad","configurarCantidadArray","Array","from","length","console","log","cantidadPaginas","map","paginas","EstadoPagina","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,KADkB;AAElBC,EAAAA,mBAFkB;AAGlBC,EAAAA,gBAHkB;AAIlBC,EAAAA;AAJkB,CAAD,KAKb;AACN,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,CAAD,CAApD;AACE,MAAIE,KAAK,CAAC,CAAD,CAAT,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACd,MAAIA,KAAK,CAAC,CAAD,CAAT,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;;AAIhB,QAAMM,uBAAuB,GAAGH,KAAD,IAAS;AACtC,WAAOI,KAAK,CAACC,IAAN,CAAW;AAACC,MAAAA,MAAM,EAACN,KAAK,CAACM,MAAN,GAAe;AAAvB,KAAX,CAAP;AACD,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,uBAAuB,CAACH,KAAD,CAAnC;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,cAAnB;AACA,MAAIQ,eAAe,GAAE,IAArB;AACA;;AAEE,MAAIT,KAAK,CAACM,MAAN,GAAe,EAAf,IAAqB,CAAzB,EAA4B;AAC1BG,IAAAA,eAAe,GAAGT,KAAK,CAACM,MAAN,GAAe,EAAjC;AACD,GAFD,MAEO;AACLG,IAAAA,eAAe,GAAGT,KAAK,CAACM,MAAN,GAAe,EAAf,GAAoB,CAAtC;AACD;AAEH;;;;;;AAME,SAAO,CAAC,CAAD,EAAII,GAAJ,CAASC,OAAD,iBACb;AACE,IAAA,IAAI,EAAE,CAACA,OAAO,CAAC,CAAD,CAAR,CADR;AAEE,IAAA,KAAK,EACHZ,gBAAgB,CAACa,YAAjB,IAAiCD,OAAO,CAAC,CAAD,CAAxC,GACI;AAAEE,MAAAA,MAAM,EAAE;AAAV,KADJ,GAEI;AAAEA,MAAAA,MAAM,EAAE;AAAV,KALR;AAOE,IAAA,OAAO,EAAE,MAAM;AACbf,MAAAA,mBAAmB,CAAC,EAClB,GAAGC,gBADe;AAElBa,QAAAA,YAAY,EAAED,OAAO,CAAC,CAAD;AAFH,OAAD,CAAnB;AAID,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGA,OAAO,CAAC,CAAD,CAAP,GAAa,CAdhB,CADK,CAAP;AAkBD,CApDD;;AAsDA,eAAef,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Paginacion = ({\r\n  query,\r\n  hookSetEstadoPagina,\r\n  hookEstadoPagina,\r\n  datos\r\n}) => {\r\nconst [estadoCantidad, setEstadoCantidad] = useState(0);\r\n  if (query[0]) return <p>Loading ...</p>;\r\n  if (query[1]) return <p>error</p>;\r\n\r\n\r\n\r\nconst configurarCantidadArray =(datos)=>{\r\n  return Array.from({length:datos.length / 10});\r\n}\r\n\r\nconsole.log(configurarCantidadArray(datos))\r\n\r\nconsole.log(\"asd\", estadoCantidad);\r\nlet cantidadPaginas= null\r\n/*   let arrayPaginacion = []; */\r\n\r\n  if (datos.length % 10 == 0) {\r\n    cantidadPaginas = datos.length / 10;\r\n  } else {\r\n    cantidadPaginas = datos.length / 10 + 1;\r\n  }\r\n\r\n/* \r\n  for (let i = 0; i < cantidadPaginas; i++) {\r\n    arrayPaginacion.push([i]);\r\n  } */\r\n\r\n\r\n  return [1].map((paginas) => (\r\n    <button\r\n      name={[paginas[0]]}\r\n      style={\r\n        hookEstadoPagina.EstadoPagina == paginas[0]\r\n          ? { border: \"solid .1rem red\" }\r\n          : { border: \"\" }\r\n      }\r\n      onClick={() => {\r\n        hookSetEstadoPagina({\r\n          ...hookEstadoPagina,\r\n          EstadoPagina: paginas[0],\r\n        });\r\n      }}\r\n    >\r\n      {paginas[0] + 1}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default Paginacion;\r\n"]},"metadata":{},"sourceType":"module"}