{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0\n  });\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\"\n  });\n  const [estadoDataInfo, setEstadoDataInfo] = useState(true);\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(graphqlQuery().filtrarPorNombre);\n  const [getResult, {\n    loading: loadingLazy,\n    error: errorLazy,\n    data: dataLazy\n  }] = useLazyQuery(graphqlQuery().filtrarPorNombre);\n  const [lis, setlist] = useState(data);\n\n  const cambiarOrden = e => {\n    getResult();\n    setEstadoBotones({ ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array === null || array === void 0 ? void 0 : array.filter(str => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n\n  const OrdenarPaisesPor = dataApollo => {\n    let nombre1 = null;\n    let nombre2 = null;\n    return dataApollo === null || dataApollo === void 0 ? void 0 : dataApollo.countries.sort((a, b) => {\n      var _a$languages$, _b$languages$;\n\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          nombre1 = a.continent.name.toLowerCase();\n          nombre2 = b.continent.name.toLowerCase();\n          break;\n\n        case 1:\n          nombre1 = (_a$languages$ = a.languages[0]) === null || _a$languages$ === void 0 ? void 0 : _a$languages$.name.toLowerCase();\n          nombre2 = (_b$languages$ = b.languages[0]) === null || _b$languages$ === void 0 ? void 0 : _b$languages$.name.toLowerCase();\n          break;\n\n        default:\n          break;\n      }\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  let configurarArrayDatos = array => {\n    var _filtrarLista;\n\n    return (_filtrarLista = filtrarLista(OrdenarPaisesPor(estadoDataInfo ? data : dataLazy), estadoInput.buscar)) === null || _filtrarLista === void 0 ? void 0 : _filtrarLista.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10);\n  };\n\n  const ResultadoBusqueda = () => {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Loading ...\");\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }\n    }, \"error\");\n    setlist(data);\n\n    if (estadoDataInfo ? data : dataLazy) {\n      console.log('dentro', lis);\n      /* return lis?.map((listaBusqueda, index)=>( <article className=\"flexBox RowWarp\" key={index}>\n      <h1>Pais</h1>\n      <div className=\"divContenedorDatosArticulo flexBoxRow\">\n      <h2>Nombre:</h2>\n      <h2>{listaBusqueda.name}</h2>\n      </div>\n      <div className=\"divContenedorDatosArticulo flexBoxRow\">\n      <h2>Capital:</h2>\n      <h2>{listaBusqueda.capital}</h2>\n      </div>\n      <div className=\"divContenedorDatosArticulo flexBoxRow\">\n      <h2>lenguas:</h2>\n      <h2>{listaBusqueda.languages[0]?.name}</h2>\n      </div>\n      <div className=\"divContenedorDatosArticulo flexBoxRow\">\n      <h2>Continente:</h2>\n      <h2>{listaBusqueda.continent.name}</h2>\n      </div>\n      </article>)); */\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    });\n    /*    if (estadoDataInfo ? data : dataLazy) {\n         let operacionesBuscar = filtrarLista(\n           OrdenarPaisesPor(estadoDataInfo ? data : dataLazy),\n           estadoInput.buscar\n         )\n           ?.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10)\n           .map((asd, index) => {\n             return (\n               <article className=\"flexBox RowWarp\" key={index}>\n                 <h1>Pais</h1>\n                 <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                   <h2>Nombre:</h2>\n                   <h2>{asd.name}</h2>\n                 </div>\n                 <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                   <h2>Capital:</h2>\n                   <h2>{asd.capital}</h2>\n                 </div>\n                 <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                   <h2>lenguas:</h2>\n                   <h2>{asd.languages[0]?.name}</h2>\n                 </div>\n                  <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                   <h2>Continente:</h2>\n                   <h2>{asd.continent.name}</h2>\n                 </div>\n               </article>\n             );\n           });\n          return operacionesBuscar;\n       } else {\n         return <div>no data</div>;\n       } */\n  };\n\n  useEffect(() => {}, [estadoInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorApp flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \" Paises\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorBuscar flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    spellCheck: false,\n    value: estadoInput.buscar,\n    onChange: e => {\n      setEstadoInput({\n        buscar: e.currentTarget.value\n      });\n      console.log(\"antes\", dataLazy);\n      getResult();\n      console.log(\"despues\", dataLazy);\n      setlist(dataLazy);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorOrdenarPor flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Ordenar por\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 0 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Continente\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Continente\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 1 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Lenguaje\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Lenguaje\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorArticulos flexBoxRowWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResultadoBusqueda, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorPaginacion flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paginacion, {\n    hookEstadoPagina: estadoBotones,\n    hookSetEstadoPagina: setEstadoBotones,\n    hookListaPaises: lis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/App.js"],"names":["React","useEffect","useState","useQuery","graphqlQuery","Paginacion","useLazyQuery","App","estadoBotones","setEstadoBotones","SeleccionOrden","EstadoPagina","estadoInput","setEstadoInput","buscar","estadoDataInfo","setEstadoDataInfo","loading","error","data","refetch","filtrarPorNombre","getResult","loadingLazy","errorLazy","dataLazy","lis","setlist","cambiarOrden","e","currentTarget","name","filtrarLista","array","input","filter","str","toLowerCase","indexOf","OrdenarPaisesPor","dataApollo","nombre1","nombre2","countries","sort","a","b","continent","languages","configurarArrayDatos","slice","ResultadoBusqueda","console","log","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n  });\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\",\n  });\n  const [estadoDataInfo, setEstadoDataInfo] = useState(true);\n\n  const { loading, error, data, refetch } = useQuery(\n    graphqlQuery().filtrarPorNombre\n  );\n  const [\n    getResult,\n    { loading: loadingLazy, error: errorLazy, data: dataLazy },\n  ] = useLazyQuery(graphqlQuery().filtrarPorNombre);\n\n  const [lis, setlist] = useState(data);\n\n\n\n  const cambiarOrden = (e) => {\n    getResult();\n    setEstadoBotones({\n      ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1,\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array?.filter((str) => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n  const OrdenarPaisesPor = (dataApollo) => {\n    let nombre1 = null;\n    let nombre2 = null;\n    return dataApollo?.countries.sort((a, b) => {\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          nombre1 = a.continent.name.toLowerCase();\n          nombre2 = b.continent.name.toLowerCase();\n\n          break;\n\n        case 1:\n          nombre1 = a.languages[0]?.name.toLowerCase();\n          nombre2 = b.languages[0]?.name.toLowerCase();\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n      return 0;\n    });\n  };\n\n  let configurarArrayDatos =(array,)=>filtrarLista(\n    OrdenarPaisesPor(estadoDataInfo ? data : dataLazy),\n    estadoInput.buscar\n  )\n    ?.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10);\n\n  const ResultadoBusqueda = () => {\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>error</p>;\n    setlist(data); \n   if (estadoDataInfo ? data : dataLazy){\nconsole.log('dentro', lis);\n    /* return lis?.map((listaBusqueda, index)=>( <article className=\"flexBox RowWarp\" key={index}>\n<h1>Pais</h1>\n<div className=\"divContenedorDatosArticulo flexBoxRow\">\n  <h2>Nombre:</h2>\n  <h2>{listaBusqueda.name}</h2>\n</div>\n<div className=\"divContenedorDatosArticulo flexBoxRow\">\n  <h2>Capital:</h2>\n  <h2>{listaBusqueda.capital}</h2>\n</div>\n<div className=\"divContenedorDatosArticulo flexBoxRow\">\n  <h2>lenguas:</h2>\n  <h2>{listaBusqueda.languages[0]?.name}</h2>\n</div>\n\n<div className=\"divContenedorDatosArticulo flexBoxRow\">\n  <h2>Continente:</h2>\n  <h2>{listaBusqueda.continent.name}</h2>\n</div>\n</article>)); */\n    } \n\nreturn<div></div>\n /*    if (estadoDataInfo ? data : dataLazy) {\n      let operacionesBuscar = filtrarLista(\n        OrdenarPaisesPor(estadoDataInfo ? data : dataLazy),\n        estadoInput.buscar\n      )\n        ?.slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10)\n        .map((asd, index) => {\n          return (\n            <article className=\"flexBox RowWarp\" key={index}>\n              <h1>Pais</h1>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Nombre:</h2>\n                <h2>{asd.name}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Capital:</h2>\n                <h2>{asd.capital}</h2>\n              </div>\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>lenguas:</h2>\n                <h2>{asd.languages[0]?.name}</h2>\n              </div>\n\n              <div className=\"divContenedorDatosArticulo flexBoxRow\">\n                <h2>Continente:</h2>\n                <h2>{asd.continent.name}</h2>\n              </div>\n            </article>\n          );\n        });\n\n      return operacionesBuscar;\n    } else {\n      return <div>no data</div>;\n    } */\n  };\n\n  useEffect(() => {}, [estadoInput]);\n  return (\n    <div className=\"divContenedorApp flexBoxColumn\">\n      <header>\n        <h1> Paises</h1>\n      </header>\n      <main className=\"flexBoxColumn\">\n        <div className=\"divContenedorBuscar flexBoxColumn\">\n          <input\n            spellCheck={false}\n            value={estadoInput.buscar}\n            onChange={(e) => {\n              setEstadoInput({ buscar: e.currentTarget.value });\n              console.log(\"antes\", dataLazy);\n              getResult();\n              console.log(\"despues\", dataLazy);\n              setlist(dataLazy);\n            }}\n          />\n\n          <div className=\"divContenedorOrdenarPor flexBoxRow\">\n            <h3>Ordenar por</h3>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 0\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Continente\"\n              onClick={cambiarOrden}\n            >\n              Continente\n            </button>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 1\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Lenguaje\"\n              onClick={cambiarOrden}\n            >\n              Lenguaje\n            </button>\n          </div>\n        </div>\n        <div className=\"divContenedorArticulos flexBoxRowWrap\">\n          <ResultadoBusqueda />\n        </div>\n        <div className=\"divContenedorPaginacion flexBoxRow\">\n          <Paginacion\n            hookEstadoPagina={estadoBotones}\n            hookSetEstadoPagina={setEstadoBotones}\n            hookListaPaises={lis}\n          />\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}