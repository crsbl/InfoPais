{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\n\nconst App = () => {\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\"\n  });\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0\n  });\n\n  const cambiarOrden = e => {\n    setEstadoBotones({\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1\n    });\n  };\n\n  const ResultadoBusqueda = () => {\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(graphqlQuery().filtrarPorNombre);\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, \"Loading ...\");\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 23\n      }\n    }, \"error\");\n    /*     console.log(datadd.map((asd) => asd.languages[0]?.name)); */\n\n    /* tomar todo y dejar solo el return del coponente y pasar los datos por props\n    asi poder hacer uso del refetch */\n\n    const [asd, setasd] = useState({\n      nombre1: null,\n      nombre2: null\n    });\n    let listaContinentes = data.countries.sort((a, b) => {\n      var _a$languages$, _b$languages$;\n\n      /*      const nombre1 = a[\"continent\"][\"name\"].toLowerCase();\n      const nombre2 = b[\"continent\"][\"name\"].toLowerCase(); */\n      let nombre1 = null;\n      let nombre2 = null;\n\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          setasd({\n            nombre1: a[\"continent\"][\"name\"].toLowerCase(),\n            nombre2: b[\"continent\"][\"name\"].toLowerCase()\n          });\n          break;\n\n        case 1:\n          setasd({\n            nombre1: (_a$languages$ = a[\"languages\"][0]) === null || _a$languages$ === void 0 ? void 0 : _a$languages$[\"name\"].toLowerCase(),\n            nombre2: (_b$languages$ = b[\"languages\"][0]) === null || _b$languages$ === void 0 ? void 0 : _b$languages$[\"name\"].toLowerCase()\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      if (asd.nombre1 < asd.nombre2) {\n        return -1;\n      }\n\n      if (asd.nombre1 > asd.nombre2) {\n        return 1;\n      }\n\n      return 0;\n    });\n    /*   let listaLenguages = data.countries.sort((a, b) => {\n      const nombre1 = a[\"languages\"][0]?.[\"name\"].toLowerCase();\n      const nombre2 = b[\"languages\"][0]?.[\"name\"].toLowerCase();\n       if (nombre1 < nombre2) {\n        return -1;\n      }\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n      return 0;\n    }); */\n\n    return listaContinentes.map((asd, index) => {\n      if (asd.name.toLowerCase().indexOf(estadoInput.buscar.toLowerCase()) !== -1) {\n        return /*#__PURE__*/React.createElement(\"article\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }, asd.name), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }, \"asd.capital\")));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorApp flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \" Paises\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorBuscar flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    spellCheck: false,\n    value: estadoInput.buscar,\n    onChange: e => {\n      setEstadoInput({\n        buscar: e.currentTarget.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorOrdenarPor flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Ordenar por\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 0 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Continente\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Continente\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 1 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Lenguaje\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Lenguaje\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorArticulos flexBoxRowWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResultadoBusqueda, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/App.js"],"names":["React","useEffect","useState","ApolloClient","ApolloProvider","useQuery","graphqlQuery","App","estadoInput","setEstadoInput","buscar","estadoBotones","setEstadoBotones","SeleccionOrden","cambiarOrden","e","currentTarget","name","ResultadoBusqueda","loading","error","data","filtrarPorNombre","asd","setasd","nombre1","nombre2","listaContinentes","countries","sort","a","b","toLowerCase","map","index","indexOf","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\n\nconst App = () => {\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\",\n  });\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n  });\n  const cambiarOrden = (e) => {\n    setEstadoBotones({\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1,\n    });\n  };\n  const ResultadoBusqueda = () => {\n    const { loading, error, data } = useQuery(graphqlQuery().filtrarPorNombre);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>error</p>;\n\n    /*     console.log(datadd.map((asd) => asd.languages[0]?.name)); */\n    /* tomar todo y dejar solo el return del coponente y pasar los datos por props\nasi poder hacer uso del refetch */\n    const [asd, setasd] = useState({\n      nombre1: null,\n      nombre2: null,\n    });\n    let listaContinentes = data.countries.sort((a, b) => {\n      /*      const nombre1 = a[\"continent\"][\"name\"].toLowerCase();\n      const nombre2 = b[\"continent\"][\"name\"].toLowerCase(); */\n      let nombre1 = null;\n      let nombre2 = null;\n      switch (estadoBotones.SeleccionOrden) {\n        case 0:\n          setasd({\n            nombre1: a[\"continent\"][\"name\"].toLowerCase(),\n            nombre2: b[\"continent\"][\"name\"].toLowerCase(),\n          });\n\n          break;\n\n        case 1:\n          setasd({\n            nombre1: a[\"languages\"][0]?.[\"name\"].toLowerCase(),\n            nombre2: b[\"languages\"][0]?.[\"name\"].toLowerCase(),\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      if (asd.nombre1 < asd.nombre2) {\n        return -1;\n      }\n      if (asd.nombre1 > asd.nombre2) {\n        return 1;\n      }\n      return 0;\n    });\n\n    /*   let listaLenguages = data.countries.sort((a, b) => {\n      const nombre1 = a[\"languages\"][0]?.[\"name\"].toLowerCase();\n      const nombre2 = b[\"languages\"][0]?.[\"name\"].toLowerCase();\n\n      if (nombre1 < nombre2) {\n        return -1;\n      }\n      if (nombre1 > nombre2) {\n        return 1;\n      }\n      return 0;\n    }); */\n\n    return listaContinentes.map((asd, index) => {\n      if (\n        asd.name.toLowerCase().indexOf(estadoInput.buscar.toLowerCase()) !== -1\n      ) {\n        return (\n          <article key={index}>\n            <div>\n              <h2>{asd.name}</h2>\n              <h2>asd.capital</h2>\n            </div>\n          </article>\n        );\n      }\n    });\n  };\n\n  return (\n    <div className=\"divContenedorApp flexBoxColumn\">\n      <header>\n        <h1> Paises</h1>\n      </header>\n      <main className=\"flexBoxColumn\">\n        <div className=\"divContenedorBuscar flexBoxColumn\">\n          <input\n            spellCheck={false}\n            value={estadoInput.buscar}\n            onChange={(e) => {\n              setEstadoInput({ buscar: e.currentTarget.value });\n            }}\n          />\n\n          <div className=\"divContenedorOrdenarPor flexBoxRow\">\n            <h3>Ordenar por</h3>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 0\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Continente\"\n              onClick={cambiarOrden}\n            >\n              Continente\n            </button>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 1\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Lenguaje\"\n              onClick={cambiarOrden}\n            >\n              Lenguaje\n            </button>\n          </div>\n        </div>\n        <div className=\"divContenedorArticulos flexBoxRowWrap\">\n          <ResultadoBusqueda />\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}