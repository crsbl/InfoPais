{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0\n  });\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\"\n  });\n  const [estadoDataInfo, setEstadoDataInfo] = useState(true);\n  const [getResult, results, {\n    data: datalLazy\n  }] = useLazyQuery(graphqlQuery().filtrarPorNombre);\n  /* let dataLazyPreparada = dataLazy ? dataLazy : []; */\n\n  const cambiarOrden = e => {\n    setEstadoBotones({ ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array.filter(str => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n\n  const ResultadoBusqueda = () => {\n    const {\n      loading,\n      error,\n      data,\n      refetch\n    } = useQuery(graphqlQuery().filtrarPorNombre);\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Loading ...\");\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }\n    }, \"error\");\n\n    const OrdenarPaisesPor = dataApollo => {\n      return dataApollo === null || dataApollo === void 0 ? void 0 : dataApollo.countries.sort((a, b) => {\n        var _a$languages$, _b$languages$;\n\n        let nombre1 = null;\n        let nombre2 = null;\n\n        switch (estadoBotones.SeleccionOrden) {\n          case 0:\n            nombre1 = a.continent.name.toLowerCase();\n            nombre2 = b.continent.name.toLowerCase();\n            break;\n\n          case 1:\n            nombre1 = (_a$languages$ = a.languages[0]) === null || _a$languages$ === void 0 ? void 0 : _a$languages$.name.toLowerCase();\n            nombre2 = (_b$languages$ = b.languages[0]) === null || _b$languages$ === void 0 ? void 0 : _b$languages$.name.toLowerCase();\n            break;\n\n          default:\n            break;\n        }\n\n        if (nombre1 < nombre2) {\n          return -1;\n        }\n\n        if (nombre1 > nombre2) {\n          return 1;\n        }\n\n        return 0;\n      });\n    };\n\n    return filtrarLista(OrdenarPaisesPor(data), estadoInput.buscar).slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10).map((asd, index) => {\n      var _asd$languages$;\n\n      return /*#__PURE__*/React.createElement(\"article\", {\n        className: \"flexBox RowWarp\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"Pais\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divContenedorDatosArticulo flexBoxRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, \"Nombre:\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, asd.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divContenedorDatosArticulo flexBoxRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, \"Capital:\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, asd.capital)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divContenedorDatosArticulo flexBoxRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, \"lenguas:\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, (_asd$languages$ = asd.languages[0]) === null || _asd$languages$ === void 0 ? void 0 : _asd$languages$.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divContenedorDatosArticulo flexBoxRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, \"Continente:\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, asd.continent.name)));\n    });\n    /*  listaPaises.slice(0, 10).map((asd, index) => {\n      if (\n        asd.name.toLowerCase().indexOf(estadoInput.buscar.toLowerCase()) !== -1\n      ) {\n        return (\n          <article className=\"flexBox RowWarp\" key={index}>\n            <h1>Pais</h1>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Nombre:</h2>\n              <h2>{asd.name}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Capital:</h2>\n              <h2>{asd.capital}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>lenguas:</h2>\n              <h2>{asd.languages[0]?.name}</h2>\n            </div>\n             <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Continente:</h2>\n              <h2>{asd.continent.name}</h2>\n            </div>\n          </article>\n        );\n      }\n    }); */\n  };\n\n  useEffect(() => {}, [estadoInput]);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorApp flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \" Paises\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorBuscar flexBoxColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    spellCheck: false,\n    value: estadoInput.buscar,\n    onChange: e => {\n      setEstadoInput({\n        buscar: e.currentTarget.value\n      });\n      getResult();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorOrdenarPor flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Ordenar por\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 0 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Continente\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Continente\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: estadoBotones.SeleccionOrden == 1 ? {\n      backgroundColor: \"antiquewhite\"\n    } : {\n      backgroundColor: \"\"\n    },\n    name: \"Lenguaje\",\n    onClick: cambiarOrden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Lenguaje\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorArticulos flexBoxRowWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResultadoBusqueda, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divContenedorPaginacion flexBoxRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paginacion, {\n    hookEstadoPagina: estadoBotones,\n    hookSetEstadoPagina: setEstadoBotones,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/App.js"],"names":["React","useEffect","useState","ApolloClient","ApolloProvider","useQuery","graphqlQuery","Paginacion","useLazyQuery","App","estadoBotones","setEstadoBotones","SeleccionOrden","EstadoPagina","estadoInput","setEstadoInput","buscar","estadoDataInfo","setEstadoDataInfo","getResult","results","data","datalLazy","filtrarPorNombre","cambiarOrden","e","currentTarget","name","filtrarLista","array","input","filter","str","toLowerCase","indexOf","ResultadoBusqueda","loading","error","refetch","OrdenarPaisesPor","dataApollo","countries","sort","a","b","nombre1","nombre2","continent","languages","slice","map","asd","index","capital","value","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAO,kBAAP;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,qBAAzC;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,YAAT,QAA6B,qBAA7B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC;AACjDU,IAAAA,cAAc,EAAE,CADiC;AAEjDC,IAAAA,YAAY,EAAE;AAFmC,GAAD,CAAlD;AAIA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC;AAC7Cc,IAAAA,MAAM,EAAE;AADqC,GAAD,CAA9C;AAGA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,IAAD,CAApD;AAGE,QAAM,CAACiB,SAAD,EAAYC,OAAZ,EAAoB;AAACC,IAAAA,IAAI,EAACC;AAAN,GAApB,IAAwCd,YAAY,CAACF,YAAY,GAAGiB,gBAAhB,CAA1D;AACA;;AACF,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1Bd,IAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfE,MAAAA,cAAc,EAAEa,CAAC,CAACC,aAAF,CAAgBC,IAAhB,IAAwB,YAAxB,GAAuC,CAAvC,GAA2C;AAF5C,KAAD,CAAhB;AAID,GALD;;AAOA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrC,WAAOD,KAAK,CAACE,MAAN,CAAcC,GAAD,IAAS;AAC3B,aAAOA,GAAG,CAACL,IAAJ,CAASM,WAAT,GAAuBC,OAAvB,CAA+BJ,KAA/B,MAA0C,CAAC,CAAlD;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,QAAMK,iBAAiB,GAAG,MAAM;AAC9B,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBhB,MAAAA,IAAlB;AAAwBiB,MAAAA;AAAxB,QAAoCjC,QAAQ,CAChDC,YAAY,GAAGiB,gBADiC,CAAlD;AAEA,QAAIa,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AAEX,UAAME,gBAAgB,GAAIC,UAAD,IAAgB;AACvC,aAAOA,UAAP,aAAOA,UAAP,uBAAOA,UAAU,CAAEC,SAAZ,CAAsBC,IAAtB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAAA;;AAC1C,YAAIC,OAAO,GAAG,IAAd;AACA,YAAIC,OAAO,GAAG,IAAd;;AACA,gBAAQpC,aAAa,CAACE,cAAtB;AACE,eAAK,CAAL;AACEiC,YAAAA,OAAO,GAAGF,CAAC,CAACI,SAAF,CAAYpB,IAAZ,CAAiBM,WAAjB,EAAV;AACAa,YAAAA,OAAO,GAAGF,CAAC,CAACG,SAAF,CAAYpB,IAAZ,CAAiBM,WAAjB,EAAV;AAEA;;AAEF,eAAK,CAAL;AACEY,YAAAA,OAAO,oBAAGF,CAAC,CAACK,SAAF,CAAY,CAAZ,CAAH,kDAAG,cAAgBrB,IAAhB,CAAqBM,WAArB,EAAV;AACAa,YAAAA,OAAO,oBAAGF,CAAC,CAACI,SAAF,CAAY,CAAZ,CAAH,kDAAG,cAAgBrB,IAAhB,CAAqBM,WAArB,EAAV;AAEA;;AAEF;AACE;AAdJ;;AAiBA,YAAIY,OAAO,GAAGC,OAAd,EAAuB;AACrB,iBAAO,CAAC,CAAR;AACD;;AACD,YAAID,OAAO,GAAGC,OAAd,EAAuB;AACrB,iBAAO,CAAP;AACD;;AACD,eAAO,CAAP;AACD,OA3BM,CAAP;AA4BD,KA7BD;;AAgCA,WAAOlB,YAAY,CAACW,gBAAgB,CAAClB,IAAD,CAAjB,EAAyBP,WAAW,CAACE,MAArC,CAAZ,CACJiC,KADI,CACEvC,aAAa,CAACG,YADhB,EAC8BH,aAAa,CAACG,YAAd,GAA6B,EAD3D,EAEJqC,GAFI,CAEA,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAAA;;AACnB,0BACE;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAqC,QAAA,GAAG,EAAEA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,GAAG,CAACxB,IAAT,CAFF,CAFF,eAME;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKwB,GAAG,CAACE,OAAT,CAFF,CANF,eAUE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAKF,GAAG,CAACH,SAAJ,CAAc,CAAd,CAAL,oDAAK,gBAAkBrB,IAAvB,CAFF,CAVF,eAeE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKwB,GAAG,CAACJ,SAAJ,CAAcpB,IAAnB,CAFF,CAfF,CADF;AAsBD,KAzBI,CAAP;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BD,GA7FD;;AA+FA1B,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACa,WAAD,CAAX,CAAT;AACAb,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,UAAU,EAAE,KADd;AAEE,IAAA,KAAK,EAAEa,WAAW,CAACE,MAFrB;AAGE,IAAA,QAAQ,EAAGS,CAAD,IAAO;AACfV,MAAAA,cAAc,CAAC;AAAEC,QAAAA,MAAM,EAAES,CAAC,CAACC,aAAF,CAAgB4B;AAA1B,OAAD,CAAd;AACAnC,MAAAA,SAAS;AACV,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,IAAA,KAAK,EACHT,aAAa,CAACE,cAAd,IAAgC,CAAhC,GACI;AAAE2C,MAAAA,eAAe,EAAE;AAAnB,KADJ,GAEI;AAAEA,MAAAA,eAAe,EAAE;AAAnB,KAJR;AAME,IAAA,IAAI,EAAC,YANP;AAOE,IAAA,OAAO,EAAE/B,YAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAaE;AACE,IAAA,KAAK,EACHd,aAAa,CAACE,cAAd,IAAgC,CAAhC,GACI;AAAE2C,MAAAA,eAAe,EAAE;AAAnB,KADJ,GAEI;AAAEA,MAAAA,eAAe,EAAE;AAAnB,KAJR;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,OAAO,EAAE/B,YAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CAVF,CADF,eAqCE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArCF,eAwCE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,gBAAgB,EAAEd,aADpB;AAEE,IAAA,mBAAmB,EAAEC,gBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxCF,CAJF,eAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApDF,CADF;AAwDD,CArLD;;AAsLA,eAAeF,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./constantes.css\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport graphqlQuery from \"./graphql\";\nimport Paginacion from \"./componentes/paginacion\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nconst App = () => {\n  const [estadoBotones, setEstadoBotones] = useState({\n    SeleccionOrden: 0,\n    EstadoPagina: 0,\n  });\n  const [estadoInput, setEstadoInput] = useState({\n    buscar: \"\",\n  });\n  const [estadoDataInfo, setEstadoDataInfo] = useState(true);\n\n  \n    const [getResult, results,{data:datalLazy}] = useLazyQuery(graphqlQuery().filtrarPorNombre);\n    /* let dataLazyPreparada = dataLazy ? dataLazy : []; */\n  const cambiarOrden = (e) => {\n    setEstadoBotones({\n      ...estadoBotones,\n      SeleccionOrden: e.currentTarget.name == \"Continente\" ? 0 : 1,\n    });\n  };\n\n  const filtrarLista = (array, input) => {\n    return array.filter((str) => {\n      return str.name.toLowerCase().indexOf(input) !== -1;\n    });\n  };\n\n  const ResultadoBusqueda = () => {\n    const { loading, error, data, refetch } = useQuery(\n      graphqlQuery().filtrarPorNombre );\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>error</p>;\n\n    const OrdenarPaisesPor = (dataApollo) => {\n      return dataApollo?.countries.sort((a, b) => {\n        let nombre1 = null;\n        let nombre2 = null;\n        switch (estadoBotones.SeleccionOrden) {\n          case 0:\n            nombre1 = a.continent.name.toLowerCase();\n            nombre2 = b.continent.name.toLowerCase();\n\n            break;\n\n          case 1:\n            nombre1 = a.languages[0]?.name.toLowerCase();\n            nombre2 = b.languages[0]?.name.toLowerCase();\n\n            break;\n\n          default:\n            break;\n        }\n\n        if (nombre1 < nombre2) {\n          return -1;\n        }\n        if (nombre1 > nombre2) {\n          return 1;\n        }\n        return 0;\n      });\n    };\n\n\n    return filtrarLista(OrdenarPaisesPor(data), estadoInput.buscar)\n      .slice(estadoBotones.EstadoPagina, estadoBotones.EstadoPagina + 10)\n      .map((asd, index) => {\n        return (\n          <article className=\"flexBox RowWarp\" key={index}>\n            <h1>Pais</h1>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Nombre:</h2>\n              <h2>{asd.name}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Capital:</h2>\n              <h2>{asd.capital}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>lenguas:</h2>\n              <h2>{asd.languages[0]?.name}</h2>\n            </div>\n\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Continente:</h2>\n              <h2>{asd.continent.name}</h2>\n            </div>\n          </article>\n        );\n      });\n\n    /*  listaPaises.slice(0, 10).map((asd, index) => {\n      if (\n        asd.name.toLowerCase().indexOf(estadoInput.buscar.toLowerCase()) !== -1\n      ) {\n        return (\n          <article className=\"flexBox RowWarp\" key={index}>\n            <h1>Pais</h1>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Nombre:</h2>\n              <h2>{asd.name}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Capital:</h2>\n              <h2>{asd.capital}</h2>\n            </div>\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>lenguas:</h2>\n              <h2>{asd.languages[0]?.name}</h2>\n            </div>\n\n            <div className=\"divContenedorDatosArticulo flexBoxRow\">\n              <h2>Continente:</h2>\n              <h2>{asd.continent.name}</h2>\n            </div>\n          </article>\n        );\n      }\n    }); */\n  };\n\n  useEffect(() => {}, [estadoInput]);\n  useEffect(() => {\n    \n  }, []);\n  return (\n    <div className=\"divContenedorApp flexBoxColumn\">\n      <header>\n        <h1> Paises</h1>\n      </header>\n      <main className=\"flexBoxColumn\">\n        <div className=\"divContenedorBuscar flexBoxColumn\">\n          <input\n            spellCheck={false}\n            value={estadoInput.buscar}\n            onChange={(e) => {\n              setEstadoInput({ buscar: e.currentTarget.value });\n              getResult();\n            }}\n          />\n\n          <div className=\"divContenedorOrdenarPor flexBoxRow\">\n            <h3>Ordenar por</h3>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 0\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Continente\"\n              onClick={cambiarOrden}\n            >\n              Continente\n            </button>\n            <button\n              style={\n                estadoBotones.SeleccionOrden == 1\n                  ? { backgroundColor: \"antiquewhite\" }\n                  : { backgroundColor: \"\" }\n              }\n              name=\"Lenguaje\"\n              onClick={cambiarOrden}\n            >\n              Lenguaje\n            </button>\n          </div>\n        </div>\n        <div className=\"divContenedorArticulos flexBoxRowWrap\">\n          <ResultadoBusqueda />\n        </div>\n        <div className=\"divContenedorPaginacion flexBoxRow\">\n          <Paginacion\n            hookEstadoPagina={estadoBotones}\n            hookSetEstadoPagina={setEstadoBotones}\n          \n          />\n        </div>\n      </main>\n      <footer></footer>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}