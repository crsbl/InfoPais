{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56948\\\\Desktop\\\\progra\\\\pruebas\\\\InfoPais\\\\src\\\\componentes\\\\paginacion\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Paginacion = ({\n  hookEstadoPagina,\n  hookSetEstadoPagina,\n  hookconfigurarArrayDatos,\n  query,\n  queryLazy,\n  hookEstadoDataInfo\n}) => {\n  var _query$, _queryLazy$;\n\n  const [estadoCantidad, setEstadoCantidad] = useState({\n    cantidad: 0\n  });\n  if (query[0]) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 24\n    }\n  }, \"Loading ...\");\n  if (query[1]) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 24\n    }\n  }, \"error\");\n  setEstadoCantidad({\n    cantidad: hookEstadoDataInfo ? (_query$ = query[2]) === null || _query$ === void 0 ? void 0 : _query$.countries.length : (_queryLazy$ = queryLazy[2]) === null || _queryLazy$ === void 0 ? void 0 : _queryLazy$.countries.length\n  });\n  /* listaPaises?.countries.length; */\n\n  let cantidadPaginas = 0;\n  let arrayPaginacion = [];\n\n  if (estadoCantidad.cantidad % 10 == 0) {\n    cantidadPaginas = estadoCantidad.cantidad / 10;\n  } else {\n    cantidadPaginas = estadoCantidad.cantidad / 10 + 1;\n  }\n\n  for (let i = 0; i < cantidadPaginas; i++) {\n    arrayPaginacion.push([i]);\n  }\n\n  console.log(arrayPaginacion);\n  return arrayPaginacion.map(paginas => /*#__PURE__*/React.createElement(\"button\", {\n    name: [paginas[0]],\n    style: hookEstadoPagina.EstadoPagina == paginas[0] ? {\n      border: \"solid .1rem red\"\n    } : {\n      border: \"\"\n    },\n    onClick: () => {\n      hookSetEstadoPagina({ ...hookEstadoPagina,\n        EstadoPagina: paginas[0]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, paginas[0] + 1));\n};\n\nexport default Paginacion;","map":{"version":3,"sources":["C:/Users/56948/Desktop/progra/pruebas/InfoPais/src/componentes/paginacion/index.js"],"names":["React","useEffect","useState","Paginacion","hookEstadoPagina","hookSetEstadoPagina","hookconfigurarArrayDatos","query","queryLazy","hookEstadoDataInfo","estadoCantidad","setEstadoCantidad","cantidad","countries","length","cantidadPaginas","arrayPaginacion","i","push","console","log","map","paginas","EstadoPagina","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAElBC,EAAAA,gBAFkB;AAGlBC,EAAAA,mBAHkB;AAIlBC,EAAAA,wBAJkB;AAKlBC,EAAAA,KALkB;AAMlBC,EAAAA,SANkB;AAOlBC,EAAAA;AAPkB,CAAD,KAQb;AAAA;;AAEJ,QAAK,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC;AAClDU,IAAAA,QAAQ,EAAC;AADyC,GAAD,CAAnD;AAGA,MAAIL,KAAK,CAAC,CAAD,CAAT,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACd,MAAIA,KAAK,CAAC,CAAD,CAAT,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAEhBI,EAAAA,iBAAiB,CAAC;AAACC,IAAAA,QAAQ,EAACH,kBAAkB,cAAGF,KAAK,CAAC,CAAD,CAAR,4CAAG,QAAUM,SAAV,CAAoBC,MAAvB,kBAAgCN,SAAS,CAAC,CAAD,CAAzC,gDAAgC,YAAcK,SAAd,CAAwBC;AAApF,GAAD,CAAjB;AAEG;;AAGD,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,eAAe,GAAG,EAAtB;;AAGA,MAAIN,cAAc,CAACE,QAAf,GAA0B,EAA1B,IAAgC,CAApC,EAAuC;AACrCG,IAAAA,eAAe,GAAGL,cAAc,CAACE,QAAf,GAA0B,EAA5C;AACD,GAFD,MAEO;AACLG,IAAAA,eAAe,GAAGL,cAAc,CAACE,QAAf,GAA0B,EAA1B,GAA+B,CAAjD;AACD;;AAED,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAApB,EAAqCE,CAAC,EAAtC,EAA0C;AACxCD,IAAAA,eAAe,CAACE,IAAhB,CAAqB,CAACD,CAAD,CAArB;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AACA,SAAOA,eAAe,CAACK,GAAhB,CAAqBC,OAAD,iBACzB;AACE,IAAA,IAAI,EAAE,CAACA,OAAO,CAAC,CAAD,CAAR,CADR;AAEE,IAAA,KAAK,EACHlB,gBAAgB,CAACmB,YAAjB,IAAiCD,OAAO,CAAC,CAAD,CAAxC,GACI;AAAEE,MAAAA,MAAM,EAAE;AAAV,KADJ,GAEI;AAAEA,MAAAA,MAAM,EAAE;AAAV,KALR;AAOE,IAAA,OAAO,EAAE,MAAM;AACbnB,MAAAA,mBAAmB,CAAC,EAClB,GAAGD,gBADe;AAElBmB,QAAAA,YAAY,EAAED,OAAO,CAAC,CAAD;AAFH,OAAD,CAAnB;AAID,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGA,OAAO,CAAC,CAAD,CAAP,GAAa,CAdhB,CADK,CAAP;AAkBD,CArDD;;AAuDA,eAAenB,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Paginacion = ({\r\n\r\n  hookEstadoPagina,\r\n  hookSetEstadoPagina,\r\n  hookconfigurarArrayDatos,\r\n  query,\r\n  queryLazy,\r\n  hookEstadoDataInfo,\r\n}) => {\r\n\r\n  const[estadoCantidad, setEstadoCantidad] = useState({\r\n    cantidad:0,\r\n  });\r\n  if (query[0]) return <p>Loading ...</p>;\r\n  if (query[1]) return <p>error</p>;\r\n\r\nsetEstadoCantidad({cantidad:hookEstadoDataInfo ? query[2]?.countries.length : queryLazy[2]?.countries.length})\r\n\r\n   /* listaPaises?.countries.length; */\r\n\r\n \r\n  let cantidadPaginas = 0;\r\n  let arrayPaginacion = [];\r\n\r\n\r\n  if (estadoCantidad.cantidad % 10 == 0) {\r\n    cantidadPaginas = estadoCantidad.cantidad / 10;\r\n  } else {\r\n    cantidadPaginas = estadoCantidad.cantidad / 10 + 1;\r\n  }\r\n\r\n  for (let i = 0; i < cantidadPaginas; i++) {\r\n    arrayPaginacion.push([i]);\r\n  }\r\n  console.log(arrayPaginacion);\r\n  return arrayPaginacion.map((paginas) => (\r\n    <button\r\n      name={[paginas[0]]}\r\n      style={\r\n        hookEstadoPagina.EstadoPagina == paginas[0]\r\n          ? { border: \"solid .1rem red\" }\r\n          : { border: \"\" }\r\n      }\r\n      onClick={() => {\r\n        hookSetEstadoPagina({\r\n          ...hookEstadoPagina,\r\n          EstadoPagina: paginas[0],\r\n        });\r\n      }}\r\n    >\r\n      {paginas[0] + 1}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default Paginacion;\r\n"]},"metadata":{},"sourceType":"module"}